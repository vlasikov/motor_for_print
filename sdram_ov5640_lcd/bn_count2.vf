////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 1995-2013 Xilinx, Inc.  All rights reserved.
////////////////////////////////////////////////////////////////////////////////
//   ____  ____ 
//  /   /\/   / 
// /___/  \  /    Vendor: Xilinx 
// \   \   \/     Version : 14.7
//  \   \         Application : sch2hdl
//  /   /         Filename : bn_count2.vf
// /___/   /\     Timestamp : 01/27/2017 15:50:40
// \   \  /  \ 
//  \___\/\___\ 
//
//Command: sch2hdl -sympath C:/arbeit/bon/bnXilinx/AX309/25_sdram_ov5640_lcd/sdram_ov5640_lcd/ipcore_dir -intstyle ise -family spartan6 -verilog C:/arbeit/bon/bnXilinx/AX309/25_sdram_ov5640_lcd/sdram_ov5640_lcd/bn_count2.vf -w C:/arbeit/bon/bnXilinx/AX309/25_sdram_ov5640_lcd/sdram_ov5640_lcd/bn_count2.sch
//Design Name: bn_count2
//Device: spartan6
//Purpose:
//    This verilog netlist is translated from an ECS schematic.It can be 
//    synthesized and simulated, but it should not be modified. 
//
`timescale 100 ps / 10 ps

module CB2CE_HXILINX_bn_count2(CEO, Q0, Q1, TC, C, CE, CLR);
   
   localparam TERMINAL_COUNT = 2'b11;
   
   output             CEO;
   output             Q0;
   output             Q1;
   output             TC;

   input 	      C;	
   input 	      CE;	
   input 	      CLR;	
   
   reg                Q0;
   reg                Q1;
   
   always @(posedge C or posedge CLR)
     begin
	if (CLR)
	  {Q1, Q0} <= 2'b00;
	else if (CE)
	  {Q1,Q0} <= {Q1,Q0} + 1;
     end
   
   assign CEO = TC & CE;
   assign TC = ({Q1,Q0} == TERMINAL_COUNT);
   
endmodule
`timescale 1ns / 1ps

module bn_count2(In_1, 
                 Out_1);

    input In_1;
   output Out_1;
   
   wire XLXN_16;
   wire XLXN_18;
   
   (* HU_SET = "XLXI_9_0" *) 
   CB2CE_HXILINX_bn_count2  XLXI_9 (.C(In_1), 
                                   .CE(XLXN_18), 
                                   .CLR(XLXN_16), 
                                   .CEO(), 
                                   .Q0(Out_1), 
                                   .Q1(), 
                                   .TC());
   GND  XLXI_10 (.G(XLXN_16));
   VCC  XLXI_11 (.P(XLXN_18));
endmodule
